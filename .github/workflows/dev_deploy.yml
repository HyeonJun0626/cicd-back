name: cicd deploy test
on:
  push:
    branches: main
jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.18.1 ]
        project-name: ['cicd-back']
        deploy-app-name: ['playground-cd'] # code deploy 생성 시 작성한 application name
        deploy-group: [ 'cicd-back-dev' ] # dev, prod, staging 등 code deploy application에서 생성한 배포그룹 이름
        deploy-config-name: ['CodeDeployDefault.AllAtOnce'] # code deploy application 배포그룹의 배포구성 설정 정보
        s3-bucket: [ 'play-deploy-bucket' ]
        s3-file-key: [ 'cicd-back/dev/${{ github.sha }}' ]

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Create env file # step 성공은 하지만 인스턴스에 .env 생성 안되는 문제 있음
        run: |
          echo "${{ secrets.ENV }}" > .env
          cat .env
        shell: bash

      - name: Make tar file
        run: |
          cp .env ./
          tar -cpvzf ./$GITHUB_SHA.tgz *
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp \
            --region ap-northeast-2 \
            ./$GITHUB_SHA.tgz s3://${{ matrix.s3-bucket }}/${{ matrix.s3-file-key }}.tgz

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --application-name ${{ matrix.deploy-app-name }} \
          --file-exists-behavior OVERWRITE \
          --deployment-config-name ${{ matrix.deploy-config-name }} \
          --deployment-group-name ${{ matrix.deploy-group }} \
          --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-file-key }}.tgz,bundleType=tgz
